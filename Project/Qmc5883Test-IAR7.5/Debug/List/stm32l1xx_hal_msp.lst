###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       21/Sep/2016  16:58:02
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\01work\proj\地磁\Code\Drivers\Core\STM32L1xx_HAL_Driver\Config\stm32l1xx_hal_msp.c
#    Command line =  
#        D:\01work\proj\地磁\Code\Drivers\Core\STM32L1xx_HAL_Driver\Config\stm32l1xx_hal_msp.c
#        -D USE_HAL_DRIVER -D STM32L151xD -lC
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5\Debug\List -lA
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5\Debug\List -o
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Apps/Config\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Drivers\Inc\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Drivers\Core\CMSIS\RTOS\Template\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Drivers/Core/CMSIS/Device/ST/STM32L1xx/Include\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Drivers/Core/STM32L1xx_HAL_Driver/Config\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Drivers/Core/STM32L1xx_HAL_Driver/Inc\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Drivers/Core/STM32L1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Middlewares/FreeRTOS/Source/portable/IAR/ARM_CM3\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Middlewares/FreeRTOS/Source/include\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Drivers/Core/CMSIS/Include\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Drivers/Core/RTT\
#        -I D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Drivers\
#        -I D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../BSP/Inc/\
#        -I
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5/../../Drivers/Core/CMSIS/Device/ST/STM32L1xx/Include\
#        -Ol
#    List file    =  
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5\Debug\List\stm32l1xx_hal_msp.lst
#    Object file  =  
#        D:\01work\proj\地磁\Code\Project\Qmc5883Test-IAR7.5\Debug\Obj\stm32l1xx_hal_msp.o
#
###############################################################################

D:\01work\proj\地磁\Code\Drivers\Core\STM32L1xx_HAL_Driver\Config\stm32l1xx_hal_msp.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : stm32l1xx_hal_msp.c
      4            * Description        : This file provides code for the MSP Initialization 
      5            *                      and de-Initialization codes.
      6            ******************************************************************************
      7            *
      8            * COPYRIGHT(c) 2016 STMicroelectronics
      9            *
     10            * Redistribution and use in source and binary forms, with or without modification,
     11            * are permitted provided that the following conditions are met:
     12            *   1. Redistributions of source code must retain the above copyright notice,
     13            *      this list of conditions and the following disclaimer.
     14            *   2. Redistributions in binary form must reproduce the above copyright notice,
     15            *      this list of conditions and the following disclaimer in the documentation
     16            *      and/or other materials provided with the distribution.
     17            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     18            *      may be used to endorse or promote products derived from this software
     19            *      without specific prior written permission.
     20            *
     21            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     22            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     23            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     24            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     25            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     26            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     27            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     28            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     29            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     30            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     31            *
     32            ******************************************************************************
     33            */
     34          /* Includes ------------------------------------------------------------------*/
     35          #include "stm32l1xx_hal.h"
     36          
     37          extern void Error_Handler(void);
     38          /* USER CODE BEGIN 0 */
     39          
     40          /* USER CODE END 0 */
     41          
     42          /**
     43            * Initializes the Global MSP.
     44            */

   \                                 In section .text, align 2, keep-with-next
     45          void HAL_MspInit(void)
     46          {
   \                     HAL_MspInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     47            /* USER CODE BEGIN MspInit 0 */
     48          
     49            /* USER CODE END MspInit 0 */
     50          
     51            __HAL_RCC_COMP_CLK_ENABLE();
   \   00000002   0x....             LDR.N    R0,??DataTable4  ;; 0x40023824
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   0000000A   0x....             LDR.N    R1,??DataTable4  ;; 0x40023824
   \   0000000C   0x6008             STR      R0,[R1, #+0]
   \   0000000E   0x....             LDR.N    R0,??DataTable4  ;; 0x40023824
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF010 0x4000      ANDS     R0,R0,#0x80000000
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x9800             LDR      R0,[SP, #+0]
     52             __HAL_RCC_SYSCFG_CLK_ENABLE();
   \   0000001A   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40023820
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000022   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40023820
   \   00000024   0x6008             STR      R0,[R1, #+0]
   \   00000026   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40023820
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000002E   0x9000             STR      R0,[SP, #+0]
   \   00000030   0x9800             LDR      R0,[SP, #+0]
     53          
     54            HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
   \   00000032   0x2003             MOVS     R0,#+3
   \   00000034   0x.... 0x....      BL       HAL_NVIC_SetPriorityGrouping
     55          
     56            /* System interrupt init*/
     57            /* MemoryManagement_IRQn interrupt configuration */
     58            HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
   \   00000038   0x2200             MOVS     R2,#+0
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0xF07F 0x000B      MVNS     R0,#+11
   \   00000040   0x.... 0x....      BL       HAL_NVIC_SetPriority
     59            /* BusFault_IRQn interrupt configuration */
     60            HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
   \   00000044   0x2200             MOVS     R2,#+0
   \   00000046   0x2100             MOVS     R1,#+0
   \   00000048   0xF07F 0x000A      MVNS     R0,#+10
   \   0000004C   0x.... 0x....      BL       HAL_NVIC_SetPriority
     61            /* UsageFault_IRQn interrupt configuration */
     62            HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0xF07F 0x0009      MVNS     R0,#+9
   \   00000058   0x.... 0x....      BL       HAL_NVIC_SetPriority
     63            /* SVC_IRQn interrupt configuration */
     64            HAL_NVIC_SetPriority(SVC_IRQn, 0, 0);
   \   0000005C   0x2200             MOVS     R2,#+0
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0xF07F 0x0004      MVNS     R0,#+4
   \   00000064   0x.... 0x....      BL       HAL_NVIC_SetPriority
     65            /* DebugMonitor_IRQn interrupt configuration */
     66            HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0xF07F 0x0003      MVNS     R0,#+3
   \   00000070   0x.... 0x....      BL       HAL_NVIC_SetPriority
     67            /* PendSV_IRQn interrupt configuration */
     68            HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
   \   00000074   0x2200             MOVS     R2,#+0
   \   00000076   0x210F             MOVS     R1,#+15
   \   00000078   0xF07F 0x0001      MVNS     R0,#+1
   \   0000007C   0x.... 0x....      BL       HAL_NVIC_SetPriority
     69            /* SysTick_IRQn interrupt configuration */
     70            HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
   \   00000080   0x2200             MOVS     R2,#+0
   \   00000082   0x210F             MOVS     R1,#+15
   \   00000084   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000088   0x.... 0x....      BL       HAL_NVIC_SetPriority
     71          
     72            /* USER CODE BEGIN MspInit 1 */
     73          
     74            /* USER CODE END MspInit 1 */
     75          }
   \   0000008C   0xBD01             POP      {R0,PC}          ;; return
     76          

   \                                 In section .text, align 2, keep-with-next
     77          void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
     78          {
   \                     HAL_I2C_MspInit: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     79          
     80            GPIO_InitTypeDef GPIO_InitStruct;
     81            if(hi2c->Instance==I2C1)
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable4_2  ;; 0x40005400
   \   00000008   0x4288             CMP      R0,R1
   \   0000000A   0xD11A             BNE.N    ??HAL_I2C_MspInit_0
     82            {
     83            /* USER CODE BEGIN I2C1_MspInit 0 */
     84          
     85            /* USER CODE END I2C1_MspInit 0 */
     86            
     87              /**I2C1 GPIO Configuration    
     88              PB8     ------> I2C1_SCL
     89              PB9     ------> I2C1_SDA 
     90              */
     91              GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
   \   0000000C   0xF44F 0x7040      MOV      R0,#+768
   \   00000010   0x9001             STR      R0,[SP, #+4]
     92              GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
   \   00000012   0x2012             MOVS     R0,#+18
   \   00000014   0x9002             STR      R0,[SP, #+8]
     93              GPIO_InitStruct.Pull = GPIO_PULLUP;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x9003             STR      R0,[SP, #+12]
     94              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   \   0000001A   0x2003             MOVS     R0,#+3
   \   0000001C   0x9004             STR      R0,[SP, #+16]
     95              GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
   \   0000001E   0x2004             MOVS     R0,#+4
   \   00000020   0x9005             STR      R0,[SP, #+20]
     96              HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   00000022   0xA901             ADD      R1,SP,#+4
   \   00000024   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40020400
   \   00000026   0x.... 0x....      BL       HAL_GPIO_Init
     97          
     98              /* Peripheral clock enable */
     99              __HAL_RCC_I2C1_CLK_ENABLE();
   \   0000002A   0x....             LDR.N    R0,??DataTable4  ;; 0x40023824
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0xF450 0x1000      ORRS     R0,R0,#0x200000
   \   00000032   0x....             LDR.N    R1,??DataTable4  ;; 0x40023824
   \   00000034   0x6008             STR      R0,[R1, #+0]
   \   00000036   0x....             LDR.N    R0,??DataTable4  ;; 0x40023824
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF410 0x1000      ANDS     R0,R0,#0x200000
   \   0000003E   0x9000             STR      R0,[SP, #+0]
   \   00000040   0x9800             LDR      R0,[SP, #+0]
    100            /* USER CODE BEGIN I2C1_MspInit 1 */
    101          
    102            /* USER CODE END I2C1_MspInit 1 */
    103            }
    104          
    105          }
   \                     ??HAL_I2C_MspInit_0: (+1)
   \   00000042   0xB007             ADD      SP,SP,#+28
   \   00000044   0xBD00             POP      {PC}             ;; return
    106          

   \                                 In section .text, align 2, keep-with-next
    107          void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
    108          {
   \                     HAL_I2C_MspDeInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    109          
    110            if(hi2c->Instance==I2C1)
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x....             LDR.N    R1,??DataTable4_2  ;; 0x40005400
   \   00000006   0x4288             CMP      R0,R1
   \   00000008   0xD10A             BNE.N    ??HAL_I2C_MspDeInit_0
    111            {
    112            /* USER CODE BEGIN I2C1_MspDeInit 0 */
    113          
    114            /* USER CODE END I2C1_MspDeInit 0 */
    115              /* Peripheral clock disable */
    116              __HAL_RCC_I2C1_CLK_DISABLE();
   \   0000000A   0x....             LDR.N    R0,??DataTable4  ;; 0x40023824
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF430 0x1000      BICS     R0,R0,#0x200000
   \   00000012   0x....             LDR.N    R1,??DataTable4  ;; 0x40023824
   \   00000014   0x6008             STR      R0,[R1, #+0]
    117            
    118              /**I2C1 GPIO Configuration    
    119              PB8     ------> I2C1_SCL
    120              PB9     ------> I2C1_SDA 
    121              */
    122              HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8|GPIO_PIN_9);
   \   00000016   0xF44F 0x7140      MOV      R1,#+768
   \   0000001A   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40020400
   \   0000001C   0x.... 0x....      BL       HAL_GPIO_DeInit
    123          
    124            }
    125            /* USER CODE BEGIN I2C1_MspDeInit 1 */
    126          
    127            /* USER CODE END I2C1_MspDeInit 1 */
    128          
    129          }
   \                     ??HAL_I2C_MspDeInit_0: (+1)
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
    130          

   \                                 In section .text, align 2, keep-with-next
    131          void HAL_UART_MspInit(UART_HandleTypeDef* huart)
    132          {
   \                     HAL_UART_MspInit: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    133          
    134            GPIO_InitTypeDef GPIO_InitStruct;
    135            if(huart->Instance==USART1)
   \   00000004   0x6801             LDR      R1,[R0, #+0]
   \   00000006   0x....             LDR.N    R2,??DataTable4_4  ;; 0x40013800
   \   00000008   0x4291             CMP      R1,R2
   \   0000000A   0xD11B             BNE.N    ??HAL_UART_MspInit_0
    136            {
    137            /* USER CODE BEGIN USART1_MspInit 0 */
    138          
    139            /* USER CODE END USART1_MspInit 0 */
    140              /* Peripheral clock enable */
    141              __HAL_RCC_USART1_CLK_ENABLE();
   \   0000000C   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40023820
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   00000014   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40023820
   \   00000016   0x6008             STR      R0,[R1, #+0]
   \   00000018   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40023820
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF410 0x4080      ANDS     R0,R0,#0x4000
   \   00000020   0x9000             STR      R0,[SP, #+0]
   \   00000022   0x9800             LDR      R0,[SP, #+0]
    142            
    143              /**USART1 GPIO Configuration    
    144              PA9     ------> USART1_TX
    145              PA10     ------> USART1_RX 
    146              */
    147              GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
   \   00000024   0xF44F 0x60C0      MOV      R0,#+1536
   \   00000028   0x9001             STR      R0,[SP, #+4]
    148              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   0000002A   0x2002             MOVS     R0,#+2
   \   0000002C   0x9002             STR      R0,[SP, #+8]
    149              GPIO_InitStruct.Pull = GPIO_PULLUP;
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0x9003             STR      R0,[SP, #+12]
    150              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   \   00000032   0x2003             MOVS     R0,#+3
   \   00000034   0x9004             STR      R0,[SP, #+16]
    151              GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
   \   00000036   0x2007             MOVS     R0,#+7
   \   00000038   0x9005             STR      R0,[SP, #+20]
    152              HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   0000003A   0xA901             ADD      R1,SP,#+4
   \   0000003C   0x....             LDR.N    R0,??DataTable4_5  ;; 0x40020000
   \   0000003E   0x.... 0x....      BL       HAL_GPIO_Init
   \   00000042   0xE032             B.N      ??HAL_UART_MspInit_1
    153          
    154            /* USER CODE BEGIN USART1_MspInit 1 */
    155          
    156            /* USER CODE END USART1_MspInit 1 */
    157            }
    158            else if(huart->Instance==USART3)
   \                     ??HAL_UART_MspInit_0: (+1)
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x....             LDR.N    R1,??DataTable4_6  ;; 0x40004800
   \   00000048   0x4288             CMP      R0,R1
   \   0000004A   0xD12E             BNE.N    ??HAL_UART_MspInit_1
    159            {
    160            /* USER CODE BEGIN USART3_MspInit 0 */
    161          
    162            /* USER CODE END USART3_MspInit 0 */
    163              /* Peripheral clock enable */
    164              __HAL_RCC_USART3_CLK_ENABLE();
   \   0000004C   0x....             LDR.N    R0,??DataTable4  ;; 0x40023824
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0xF450 0x2080      ORRS     R0,R0,#0x40000
   \   00000054   0x....             LDR.N    R1,??DataTable4  ;; 0x40023824
   \   00000056   0x6008             STR      R0,[R1, #+0]
   \   00000058   0x....             LDR.N    R0,??DataTable4  ;; 0x40023824
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF410 0x2080      ANDS     R0,R0,#0x40000
   \   00000060   0x9000             STR      R0,[SP, #+0]
   \   00000062   0x9800             LDR      R0,[SP, #+0]
    165              
    166               __HAL_RCC_GPIOD_CLK_ENABLE();
   \   00000064   0x....             LDR.N    R0,??DataTable4_7  ;; 0x4002381c
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000006C   0x....             LDR.N    R1,??DataTable4_7  ;; 0x4002381c
   \   0000006E   0x6008             STR      R0,[R1, #+0]
   \   00000070   0x....             LDR.N    R0,??DataTable4_7  ;; 0x4002381c
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0xF010 0x0008      ANDS     R0,R0,#0x8
   \   00000078   0x9000             STR      R0,[SP, #+0]
   \   0000007A   0x9800             LDR      R0,[SP, #+0]
    167              /**USART3 GPIO Configuration    
    168              PD8     ------> USART3_TX
    169              PD9     ------> USART3_RX 
    170              */
    171              GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
   \   0000007C   0xF44F 0x7040      MOV      R0,#+768
   \   00000080   0x9001             STR      R0,[SP, #+4]
    172              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000082   0x2002             MOVS     R0,#+2
   \   00000084   0x9002             STR      R0,[SP, #+8]
    173              GPIO_InitStruct.Pull = GPIO_PULLUP;
   \   00000086   0x2001             MOVS     R0,#+1
   \   00000088   0x9003             STR      R0,[SP, #+12]
    174              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   \   0000008A   0x2003             MOVS     R0,#+3
   \   0000008C   0x9004             STR      R0,[SP, #+16]
    175              GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
   \   0000008E   0x2007             MOVS     R0,#+7
   \   00000090   0x9005             STR      R0,[SP, #+20]
    176              HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   \   00000092   0xA901             ADD      R1,SP,#+4
   \   00000094   0x....             LDR.N    R0,??DataTable4_8  ;; 0x40020c00
   \   00000096   0x.... 0x....      BL       HAL_GPIO_Init
    177          
    178              /* Peripheral interrupt init */
    179              HAL_NVIC_SetPriority(USART3_IRQn, 5, 0);
   \   0000009A   0x2200             MOVS     R2,#+0
   \   0000009C   0x2105             MOVS     R1,#+5
   \   0000009E   0x2027             MOVS     R0,#+39
   \   000000A0   0x.... 0x....      BL       HAL_NVIC_SetPriority
    180              HAL_NVIC_EnableIRQ(USART3_IRQn);
   \   000000A4   0x2027             MOVS     R0,#+39
   \   000000A6   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
    181            /* USER CODE BEGIN USART3_MspInit 1 */
    182            //__HAL_USART_ENABLE_IT(huart, USART_IT_RXNE);
    183          
    184          
    185            /* USER CODE END USART3_MspInit 1 */
    186            }
    187          
    188          }
   \                     ??HAL_UART_MspInit_1: (+1)
   \   000000AA   0xB007             ADD      SP,SP,#+28
   \   000000AC   0xBD00             POP      {PC}             ;; return
    189          

   \                                 In section .text, align 2, keep-with-next
    190          void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
    191          {
   \                     HAL_UART_MspDeInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    192          
    193            if(huart->Instance==USART1)
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0x....             LDR.N    R2,??DataTable4_4  ;; 0x40013800
   \   00000006   0x4291             CMP      R1,R2
   \   00000008   0xD10B             BNE.N    ??HAL_UART_MspDeInit_0
    194            {
    195            /* USER CODE BEGIN USART1_MspDeInit 0 */
    196          
    197            /* USER CODE END USART1_MspDeInit 0 */
    198              /* Peripheral clock disable */
    199              __HAL_RCC_USART1_CLK_DISABLE();
   \   0000000A   0x....             LDR.N    R0,??DataTable4_1  ;; 0x40023820
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF430 0x4080      BICS     R0,R0,#0x4000
   \   00000012   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40023820
   \   00000014   0x6008             STR      R0,[R1, #+0]
    200            
    201              /**USART1 GPIO Configuration    
    202              PA9     ------> USART1_TX
    203              PA10     ------> USART1_RX 
    204              */
    205              HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
   \   00000016   0xF44F 0x61C0      MOV      R1,#+1536
   \   0000001A   0x....             LDR.N    R0,??DataTable4_5  ;; 0x40020000
   \   0000001C   0x.... 0x....      BL       HAL_GPIO_DeInit
   \   00000020   0xE011             B.N      ??HAL_UART_MspDeInit_1
    206          
    207            /* USER CODE BEGIN USART1_MspDeInit 1 */
    208          
    209            /* USER CODE END USART1_MspDeInit 1 */
    210            }
    211            else if(huart->Instance==USART3)
   \                     ??HAL_UART_MspDeInit_0: (+1)
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x....             LDR.N    R1,??DataTable4_6  ;; 0x40004800
   \   00000026   0x4288             CMP      R0,R1
   \   00000028   0xD10D             BNE.N    ??HAL_UART_MspDeInit_1
    212            {
    213            /* USER CODE BEGIN USART3_MspDeInit 0 */
    214          
    215            /* USER CODE END USART3_MspDeInit 0 */
    216              /* Peripheral clock disable */
    217              __HAL_RCC_USART3_CLK_DISABLE();
   \   0000002A   0x....             LDR.N    R0,??DataTable4  ;; 0x40023824
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0xF430 0x2080      BICS     R0,R0,#0x40000
   \   00000032   0x....             LDR.N    R1,??DataTable4  ;; 0x40023824
   \   00000034   0x6008             STR      R0,[R1, #+0]
    218            
    219              /**USART3 GPIO Configuration    
    220              PD8     ------> USART3_TX
    221              PD9     ------> USART3_RX 
    222              */
    223              HAL_GPIO_DeInit(GPIOD, GPIO_PIN_8|GPIO_PIN_9);
   \   00000036   0xF44F 0x7140      MOV      R1,#+768
   \   0000003A   0x....             LDR.N    R0,??DataTable4_8  ;; 0x40020c00
   \   0000003C   0x.... 0x....      BL       HAL_GPIO_DeInit
    224          
    225              /* Peripheral interrupt DeInit*/
    226              HAL_NVIC_DisableIRQ(USART3_IRQn);
   \   00000040   0x2027             MOVS     R0,#+39
   \   00000042   0x.... 0x....      BL       HAL_NVIC_DisableIRQ
    227          
    228            /* USER CODE BEGIN USART3_MspDeInit 1 */
    229          
    230            /* USER CODE END USART3_MspDeInit 1 */
    231            }
    232          
    233          }
   \                     ??HAL_UART_MspDeInit_1: (+1)
   \   00000046   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x40023824         DC32     0x40023824

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x40023820         DC32     0x40023820

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x40005400         DC32     0x40005400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x40013800         DC32     0x40013800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x40004800         DC32     0x40004800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x4002381C         DC32     0x4002381c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x40020C00         DC32     0x40020c00
    234          
    235          /* USER CODE BEGIN 1 */
    236          
    237          /* USER CODE END 1 */
    238          
    239          /**
    240            * @}
    241            */
    242          
    243          /**
    244            * @}
    245            */
    246          
    247          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   HAL_I2C_MspDeInit
         8   -> HAL_GPIO_DeInit
      32   HAL_I2C_MspInit
        32   -> HAL_GPIO_Init
       8   HAL_MspInit
         8   -> HAL_NVIC_SetPriority
         8   -> HAL_NVIC_SetPriorityGrouping
       8   HAL_UART_MspDeInit
         8   -> HAL_GPIO_DeInit
         8   -> HAL_NVIC_DisableIRQ
      32   HAL_UART_MspInit
        32   -> HAL_GPIO_Init
        32   -> HAL_NVIC_EnableIRQ
        32   -> HAL_NVIC_SetPriority


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
      34  HAL_I2C_MspDeInit
      70  HAL_I2C_MspInit
     142  HAL_MspInit
      72  HAL_UART_MspDeInit
     174  HAL_UART_MspInit

 
 528 bytes in section .text
 
 528 bytes of CODE memory

Errors: none
Warnings: none
